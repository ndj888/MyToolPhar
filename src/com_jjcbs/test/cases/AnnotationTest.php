<?php
/**
 * Created by JiangJiaCai.
 * User: Administrator
 * Date: 2017/8/24 0024
 * Time: 9:22
 */

namespace com_jjcbs\cases\test;


use com_jjcbs\lib\Annotation;
use PHPUnit\Framework\TestCase;

/**
 * test annotation parsed
 * Class AnnotationTest
 * @package com_jjcbs\cases\test
 * @@Service()
 */
class AnnotationTest extends TestCase
{
//    /**
//     * @var null
//     */
//    protected $annotationObj = null;
//    /**
//     * @@Enum(type="TestEnum" , id=1)
//     * @var string
//     */
//    protected $type = '';
//    /**
//     * @@CreateJavaRpc(type="UserInfoRpc")
//     * @var string
//     */
//    private $name = '';
//
//    public function setUp()
//    {
//        parent::setUp(); // TODO: Change the autogenerated stub
//        $this->annotationObj = new Annotation();
//    }
//
//    /**
//     * @@Route(name="/getList" , type="json" , method="post")
//     */
//    public function testParseVar(string $test1 = ''){
//        $arr = $this->annotationObj->parseVarList(new \ReflectionClass($this));
//        $this->assertEquals('type' , $arr[0]['name']);
//        $this->assertEquals('name' , $arr[1]['name']);
//        $this->assertTrue(boolval(strpos($arr[0]['type'] , 'protected') !== false));
//        $this->assertTrue(boolval(strpos($arr[1]['type'] , 'private') !== false));
//        $this->assertTrue(boolval(strpos($arr[0]['doc'] , '@@Enum(type="TestEnum"')  !== false));
//        return $arr;
//    }
//
//    /**
//     * test parse Method
//     * @@OutPutFormat(type="json")
//     */
//    public function testParseMethods(string $test2 = ''){
//        $arr = $this->annotationObj->parseMethodList(new \ReflectionClass($this));
//        $this->assertEquals('testParseVar' , $arr[0]['name']);
//        $this->assertEquals('testParseMethods' , $arr[1]['name']);
//        $this->assertNotEmpty($arr[0]['param']);
//        $this->assertNotEmpty($arr[1]['param']);
//        $this->assertEquals($arr[0]['param'][0]->name , 'test1');
//        $this->assertTrue(strpos($arr[0]['doc'] , '@@Route(name="/getList" , type="json" , method="post")') != false);
//        return $arr;
//    }
//
//    public function testParseClassInfo(){
//        $classInfo = $this->annotationObj->parseClassInfo(new \ReflectionClass($this));
//        $this->assertEquals('com_jjcbs\cases\test\AnnotationTest' , $classInfo['className']);
//        $this->assertFalse($classInfo['isAbstract']);
//        $this->assertTrue(strpos($classInfo['doc'] , '@@Service') != false);
//        return $classInfo;
//    }
//
//    /**
//     * @depends testParseClassInfo
//     * @param array $arr
//     */
//    public function testParseClassInfoAnnotation(array $arr){
//        $arr = $this->annotationObj->parseAnnotation($arr['doc']);
//        $this->assertEquals($arr['name'] , 'Service');
//        $this->assertEmpty($arr['param']);
//    }
//
//    /**
//     * @depends testParseMethods
//     * @param array $arr
//     */
//    public function testParseMoreMethodParam(array $arr){
//        $d = $this->annotationObj->parseAnnotation($arr[0]['doc']);
//        $this->assertEquals('Route' , $d['name']);
//        $this->assertCount(3 , $d['param']);
//        $this->assertEquals($d['param']['type'] , 'json');
//        $this->assertEquals($d['param']['method'] , 'post');
//    }
//
//    /**
//     * @depends testParseVar
//     * @param array $arr
//     */
//    public function testParseNumParam(array $arr){
//        $d = $this->annotationObj->parseAnnotation($arr[0]['doc']);
//        $this->assertEquals($d['param']['id'] , 1);
//    }
}